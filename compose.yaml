services:
  php:
    image: ${IMAGES_PREFIX:-}app-php
    depends_on:
      - pwa
    restart: unless-stopped
    environment:
      PWA_UPSTREAM: pwa:3000
      SERVER_NAME: ${SERVER_NAME:-localhost}, php:80
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
      TRUSTED_HOSTS: ${TRUSTED_HOSTS:-^${SERVER_NAME:-example\.com|localhost}|php$$}
      MONGODB_URL: <MONGODB_URL>
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://php/.well-known/mercure}
      MERCURE_PUBLIC_URL: ${CADDY_MERCURE_PUBLIC_URL:-https://${SERVER_NAME:-localhost}/.well-known/mercure}
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-442}
        protocol: tcp
      # HTTP/3
      # - target: 443
      #   published: ${HTTP3_PORT:-443}
      #   protocol: udp

  pwa:
    image: ${IMAGES_PREFIX:-}app-pwa
    environment:
      NEXT_PUBLIC_ENTRYPOINT: http://php

  db-mongodb:
    # In production, you may want to use a managed database service
    image: mongodb/mongodb-community-server:latest
    environment:
      - MONGODB_INITDB_DATABASE=api
      - MONGODB_INITDB_ROOT_USERNAME=${MONGODB_USERNAME:-}
      # You should definitely change the password in production
      - MONGODB_INITDB_ROOT_PASSWORD=${MONGODB_PASWORD:-}
    volumes:
      - db-data:/data/db:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/data/db:rw
    ports:
      - '27017:27017'

volumes:
  caddy_data:
  caddy_config:
  db_data:
